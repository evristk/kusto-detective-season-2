.execute database script <|
.create-merge table PhoneCalls (Timestamp:datetime, EventType:string, CallConnectionId:string, Properties:dynamic)
.ingest async into table PhoneCalls (@'https://kustodetectiveagency.blob.core.windows.net/kda2c2phonecalls/log_00000.csv.gz')
.ingest async into table PhoneCalls (@'https://kustodetectiveagency.blob.core.windows.net/kda2c2phonecalls/log_00001.csv.gz')
// Last command is running sync, so when it finishes the data is already ingested.
// It can take about 1min to run.
.ingest into table PhoneCalls (@'https://kustodetectiveagency.blob.core.windows.net/kda2c2phonecalls/log_00002.csv.gz')



// Events corresponding to the start of a call
let startCallEvents = PhoneCalls 
    | where EventType == "Connect"
    | extend Origin=tostring(Properties.Origin), Destination=tostring(Properties.Destination), IsHidden=tobool(Properties.IsHidden)
    | project CallConnectionId, StartTime=Timestamp, Origin, Destination, IsHidden;
// Events corresponding to the end of a call
let endCallEvents = PhoneCalls
    | where EventType == "Disconnect" 
    | extend DisconnectedBy=tostring(Properties.DisconnectedBy), EndTime=Timestamp, CallConnectionId;
// Table with the full call information per row
let calls = endCallEvents 
    | join kind=inner startCallEvents on CallConnectionId
    | project Duration=(EndTime-StartTime), StartTime, Origin, Destination, IsHidden, DisconnectedBy;
// To find the suspect, we focus on calls where
// - caller was hiding their number 
// - call started between 9am and 6pm because the suspects were pretending to be valid business
// - call was terminated by the victim
calls
    | where IsHidden==true and hourofday(StartTime) between (9 .. 18) and DisconnectedBy=="Destination"
    | summarize NumberOfCalls=count() by Origin
    | order by NumberOfCalls desc
    | take 1